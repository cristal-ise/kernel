/**
 * This file is part of the CRISTAL-iSE kernel.
 * Copyright (c) 2001-2014 The CRISTAL Consortium. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation; either version 3 of the License, or (at
 * your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; with out even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation,
 * Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
 *
 * http://www.fsf.org/licensing/licenses/lgpl.html
 */
#ifndef __com_CommonTypes_Idl__
#define __com_CommonTypes_Idl__

/*
 * Copyright (C) 2001 CERN - European Organization for Nuclear Research
 * All rights reserved.
 *
 * @author $Author: abranson $ $Date: 2004/01/21 16:17:18 $
 * @version $Revision: 1.24 $
 */

#include <CommonExceptions.idl>

#pragma prefix "org.cristalise.kernel"

module common
{

    /**************************************************************************
    * Describes the time by year, month, day, hour, minute and second
    * in Greenwich Mean Time (GMT) so it also describes the timezone by
    * providing the offset from GMT in seconds.
    *
    * @version 1.0
    * @author kovax
    **************************************************************************/
    struct  GTimeStamp
    {
        long mYear;
        long mMonth;
        long mDay;
        long mHour;
        long mMinute;
        long mSecond;
        long mTimeOffset; //in seconds
    };

    /**************************************************************************
    * Serialized UUID for Item identification. 
    * Converts to Java UUID with: new UUID(msb, lsb);
    *
    * @version 1.0
    **************************************************************************/    
    struct SystemKey
    {
    	unsigned long long msb;
    	unsigned long long lsb;
    };
    

}; //end of module common

#endif
